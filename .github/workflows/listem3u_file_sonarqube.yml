# Simple workflow for deploying static content to GitHub Pages
name: Doc_Quality_Gate_File_Sonarqube
#https://docs.github.com/fr/actions/using-workflows/workflow-syntax-for-github-actions
#https://www.githubstatus.com/
#https://github.com/charliermarsh/ruff
#https://github.com/bruschin/listem3u/new/main?filename=.github%2Fworkflows%2Fstatic.yml
#https://docs.github.com/fr/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests
#https://help.github.com/pages/
#https://docs.github.com/fr/actions/learn-github-actions/understanding-github-actions
run-name: GA File_Sonarqube ${{ github.event.head_commit.message }} ${{ github.sha }}

on: ["workflow_call"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

defaults:
  run:
    shell: bash
  # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  actions: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run
# in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production
# deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  sonarqube:
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    needs: build
    steps:
      # restauration cache
      - uses: actions/cache@v3
        id: cache2
        with:
          path: |
            .git
            rapports
            docs/_build/html
            src
          key: rap-libellule-${{ github.sha }}
      - name: Pre sonar
        run: |
          sed -i -e "s/@SONAR_VERSION@/1.8/g" ./src/sonar-project.properties
          cp rapports/coverage*.xml src/
          cp rapports/shellcheck-rapport.json src/
          cat src/sonar-project.properties
      - name: SonarQube
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: src
        env:
          name: github-pages
          # sonarcloud.io
          SONAR_HOST_URL: ${{ secrets.SONAR_IO_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_IO_TOKEN_CI }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # sonar.cloudmf.dev
          #SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          #SONAR_TOKEN: ${{ secrets.SONAR_REPAIRE_TOKEN }}
  clear-cache:
    needs: [ 'build', 'github-pages', 'sonarqube' ]
    runs-on: ubuntu-latest
    steps:
      - name: Clear cache
        uses: actions/github-script@v6
        with:
          script: |
            console.log("About to clear cache rap-libellule-${{ github.sha }}")
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            for (const cache of caches.data.actions_caches) {
              if ( cache.key === 'rap-libellule-${{ github.sha }}' ) {
                console.log(cache)
                github.rest.actions.deleteActionsCacheById({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  cache_id: cache.id,
                })
              }
            }
            console.log("Clear completed cache rap-libellule-${{ github.sha }}")
